#version=RHEL8
# Provide disk, lang, keyboard, timezone, rootpw, user (from %pre)
%include /tmp/disk

# Use graphical install
repo --name="AppStream" --baseurl=file:///run/install/repo/AppStream
# Use CDROM installation media
cdrom
# Keyboard layouts
keyboard --vckeymap=tw --xlayouts='tw'
# System language
lang en_US.UTF-8
# Network information
#network  --bootproto=dhcp --device=enp1s0 --ipv6=auto --activate
network  --bootproto=dhcp --device=eth0 --ipv6=auto --activate
network  --hostname=localhost.localdomain
# Root password
rootpw --iscrypted $6$ULz9mSt2gT1qvW/m$9oxWCxuLP7IPtDr5Co0s6HzBFEKC2JXcPiTQTLPdDKcCMnKXnorYZ9MEyVmei/RV6nm3HHWdQ1BeWqj1JyJma.
# X Window System configuration information
xconfig  --startxonboot
# Run the Setup Agent on first boot
firstboot --disable
# System services
services --enabled="chronyd"
# System timezone
timezone America/New_York --isUtc
user --name=student --password=$6$XRaz69nI35eWt3YN$cCYcpGtwQ5kTFgye01VKs22C/sDj45hcORBE9C6H3D94EKXuOtz1S/SRW6ZGQguMsEF1Z54UTOn/Mv1lrfp.E. --iscrypted --gecos="student"
firewall --disabled
services --enabled=httpd
#graphical
text
reboot

%packages
@^graphical-server-environment
@ftp-server
@mail-server
@virtualization-client
@virtualization-hypervisor
@virtualization-tools
@web-server
kexec-tools

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post --nochroot

# Define OS Path
OS=/mnt/sysimage
TEMP=/tmp/files

while true
do
        wget -O /tmp/files.tar.gz http://henrythebest.example.com/rh294/files.tar.gz
        if [ $? -eq 0 ]
        then
                break
        fi
        sleep 1

	printf "%s\r" 'Internet access interrupted ............................' > /dev/tty1
done

cd /tmp
tar zxvf files.tar.gz

#------ Copy LAB File to /var/www/html/roles/* ----------------------
echo " "> /dev/tty1

printf "%s\r" 'Copy roles to /var/www/html/roles/*' > /dev/tty1

mkdir -p ${OS}/var/www/html/roles
cp  	${TEMP}/haproxy.tar \
	${TEMP}/phpinfo.tar \
	${TEMP}/hwlist.txt  \
	${TEMP}/lvm.sh	  \
	${OS}/var/www/html/roles

#------ Copy RPM-GPG-KEY-redhat-release ------------------------------
echo " " > /dev/tty1

mkdir ${OS}/var/www/html/pub

printf "%s\r" 'Copy RPM-GPG-KEY-redhat-release' > /dev/tty1

cp	${TEMP}/RPM-GPG-KEY-redhat-release ${OS}/var/www/html/pub/

#------ Makeing Yum Client Configure file ----------------------------
echo " "> /dev/tty1

printf "%s\r" 'Makeing Yum Client Configure file' > /dev/tty1

cp 	${TEMP}/local.repo ${OS}/etc/yum.repos.d/
	

#------ Makeing Student's sudoers configure file  ---------------------
echo " "> /dev/tty1

printf "%s\r" "Setting Student's sudoers" > /dev/tty1

cp    ${TEMP}/sudo_student ${OS}/etc/sudoers.d/student


#------ Set Hostname  -------------------------------------------------
echo " "> /dev/tty1

printf "%s\r" 'Setting Hostname' > /dev/tty1

echo "workstation.lab.example.com" > ${OS}/etc/hostname


#------ Set /etc/hosts  -----------------------------------------------
echo " "> /dev/tty1

printf "%s\r" 'Define /etc/hosts' > /dev/tty1

cp    ${TEMP}/hosts ${OS}/etc/hosts


#------ Configure /etc/rc.d/rc.local  ----------------------------------
echo " "> /dev/tty1

# printf "%s\r" 'Configure /etc/rc.d/rc.local' > /dev/tty1

cp    ${TEMP}/rc.local ${OS}/etc/rc.d/rc.local

chmod 755 ${OS}/etc/rc.d/rc.local


#------ Deploy VM Control Script ---------------------------------------
echo " "> /dev/tty1

printf "%s\r" 'Deploy VM Control Script' > /dev/tty1

cp ${TEMP}/rebuild  ${OS}/usr/local/sbin/
cp ${TEMP}/vmctl    ${OS}/usr/local/sbin/

chmod 755 ${OS}/usr/local/sbin/rebuild
chmod 755 ${OS}/usr/local/sbin/vmctl

#------ SSH Key Gen -----------------------------------------------------
echo " "> /dev/tty1

printf "%s\r" 'ssh Keygen for root and student' > /dev/tty1

#--- root
mkdir ${OS}/root/.ssh 
chmod 700 ${OS}/root/.ssh 
cp    ${TEMP}/id*  ${OS}/root/.ssh
chown root:root ${OS}/root/.ssh/id_rsa*
chmod 400 ${OS}/root/.ssh/id_rsa
cp    ${TEMP}/id_rsa.pub ${OS}/root/.ssh/authorized_keys
chown root:root ${OS}/root/.ssh/authorized_keys
chmod 644 / ${OS}/root/.ssh/authorized_keys

#--- student
mkdir ${OS}/home/student/.ssh 
chown 1000:1000 ${OS}/home/student/.ssh 
chmod 700 ${OS}}/home/student/.ssh
cp    ${TEMP}/id*  ${OS}/home/student/.ssh
chown 1000:1000 ${OS}/home/student/.ssh/id_rsa
chown 1000:1000 ${OS}/home/student/.ssh/id_rsa.pub
chmod 400 ${OS}/home/student/.ssh/id_rsa

cp    ${TEMP}/id_rsa.pub ${OS}/home/student/.ssh/authorized_keys
chown 1000:1000 ${OS}/home/student/.ssh/authorized_keys
chmod 644 / ${OS}/home/student/.ssh/authorized_keys
#------ Set Default Target -----------------------------------------------
echo " "> /dev/tty1

printf "%s\r" 'Set Default Target' > /dev/tty1

rm -rf ${OS}/etc/systemd/system/default.target
ln -s /usr/lib/systemd/system/multi-user.target ${OS}/etc/systemd/system/default.target


#------ Copy USBDISK to /var/www/html/pub ---------------------------------
echo " "> /dev/tty1
printf "%s\r" 'Copy USBDISK to /var/www/html/pub' > /dev/tty1

cp -r /run/install/repo/* ${OS}/var/www/html/pub
dd if=$( df -h | grep 'repo$' | cut -f 1 -d " " ) of=${OS}/var/www/html/rhel-8.2-x86_64-dvd.iso bs=2M count=4096

%end
#====================================================================================================
%pre

DISK_LIST=$(lsblk -ido KNAME,TYPE | grep -w disk | cut -d" " -f1 | grep -Ev '^fd' | grep -Ev '^zram')

for I in ${DISK_LIST}
do
        if [ $( cat /sys/block/${I}/removable ) -ne 1 ]
        then
                DISK=${I}
        fi
done


cat > /tmp/disk <<EOF

part /boot --fstype="xfs" --ondisk=${DISK} --size=25480
part swap --fstype="swap" --ondisk=${DISK} --size=4096
part / --fstype="xfs" --ondisk=${DISK} --size=70240
clearpart --all --initlabel --drives=${DISK}

EOF

%end


